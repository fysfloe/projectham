<!DOCTYPE html>
<html lang="en">
<head>
    <title>{{ title }}</title>
    <meta charset="utf-8">
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,300,100,500,700,400italic' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="style.css" type="text/css">

    <script src="lib/socket.io.js"></script>
    <script src="lib/underscore-min.js"></script>
    <script src="lib/jquery-2.1.1.min.js"></script>
    <script src="lib/backbone-min.js"></script>
    <script src="lib/backbone.localStorage.js"></script>

    <script src="lib/three.min.js"></script>
    <script src="lib/THREEx.WindowResize.js"></script>

    <script src="lib/TrackballControls.js"></script>
    <script src="lib/tween.js"></script>
    <script src="lib/tweetFilter.js"></script>

    <script type="text/template" id="commandTemplate">
        <span class="view"><%= command %></span>
    </script>

    <script type="text/template" id="preFilterTemplate">
        <span class="view"><%= filter %></span>
        <input class="edit" type="text" value="<%= filter %>">
        <button class="editbut icon" title="Edit">&#xe608;</button>
        <button class="delbut icon" title="Delete">&#xe607;</button>
        <span class="button-desc"></span>
    </script>

    <script type="text/template" id="filterTemplate">
        <figure class="visible"><figcaption><%= filter %></figcaption><img src="img/ui/colors/<%= src %>" alt="<%= alt %>"></figure>
        <span class="sv-options">
            <a class="solo">&#xe603;</a>
            <a class="visibility ci-color">&#xe604;</a>
        </span>
    </script>

</head>
<body>
<header>
    <h1>Project Ham <span>A Twitter Live Stream Web Experience</span></h1>
    <div id="tools">
        <button id="reset" title="Reset Globe">&#xe605;</button>
        <button id="controls" title="Hide Controls">&#xe602;</button>
        <button id="fullscreen" title="Fullscreen">&#xe601;</button>
    </div>
</header>
<main>
    <div id="fb-root"></div>
    <script>(function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/de_DE/sdk.js#xfbml=1&appId=675085619278231&version=v2.0";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>

    <div id="errBox" class="with-action">
        <div>
            <h2>Oh no...</h2>
            <p id="errMsg">This is a custom error message.</p>
        </div>
        <div id="action">
            <p>Reload<span class="icon">&#xe606;</span></p>
        </div>

    </div>

    <div id="filter-box" class="main-box">
        <p class="ui-img">&#xe600;</p>
        <h2>Filter By</h2>

        <div id="filters" class="on-stream-started table"></div>

        <div id="filter-solo" class="table">
            <div class="table-cell">
                <figure class="visible">
                    <figcaption>Tweets</figcaption>
                    <img src="img/ui/colors/blue.png" alt="Blue">
                </figure>
            </div>
            <div class="table-cell">
                <figure class="visible">
                    <figcaption>Retweets</figcaption>
                    <img src="img/ui/colors/orange.png" alt="Orange">
                </figure>
            </div>
            <div class="table-cell">
                <figure class="visible">
                    <figcaption>Replies</figcaption>
                    <img src="img/ui/colors/green.png" alt="Green">
                </figure>
            </div>
        </div>

        <div id="filter-ratio" class="on-stream-started"></div>

        <ul id="preFilterList"></ul>

        <div id="filter-input-div">
            <input type="text" name="i-add-filter" id="i-add-filter" placeholder='Type your filter or say "filter by"'>
            <button id="b-add-filter1">+</button>
            <button id="b-add-filter2" class="on-stream-started">+</button>
            <div id="filterErrMsg" class="clear"></div>
        </div>

        <div class="clear"></div>

        <button id="start-stream" class="ui-bg-color">Start Stream</button>

        <div id="counts" class="table on-stream-started">
            <div class="table-cell">
                <figure>
                    <span id="overall">0</span>
                    <figcaption id="total-tweets">Total</figcaption>
                </figure>
            </div>
            <div class="table-cell">
                <figure>
                    <span id="retweets">0</span>
                    <figcaption>Retweets</figcaption>
                </figure>
            </div>
            <div class="table-cell">
                <figure>
                    <span id="replies">0</span>
                    <figcaption>Replies</figcaption>
                </figure>
            </div>
        </div>

        <button id="stop-stream" class="ui-bg-color on-stream-started">Stop Stream</button>
        <button id="screenshot" class="ui-bg-color">Take screenshot</button>

        <h3 id="trends-heading">Current Trends Worldwide</h3>
        <table id="trends">
            <tr>
                <td>1</td>
                <td><span></span></td>
            </tr>
            <tr>
                <td>2</td>
                <td><span></span></td>
            </tr>
            <tr>
                <td>3</td>
                <td><span></span></td>
            </tr>
            <tr>
                <td>4</td>
                <td><span></span></td>
            </tr>
            <tr>
                <td>5</td>
                <td><span></span></td>
            </tr>
        </table>

        <div class="more-info">
            <p>This Web Experience uses a Twitter Stream.</p>
            <p><a href="#" id="open-twitter-info-box">Learn more</a></p>
        </div>
    </div>
    <div id="globe">
        <div id="overlay"></div>
    </div>

    <div id="web-speech-box" class="main-box">
        <div id="chrome">
            <div id="results">
                <span class="final" id="final_span"></span>
                <span class="interim" id="interim_span"></span>
            </div>

            <div id="bars"></div>

            <p class="ui-img" id="mic">&#xe601;</p>
            <h2>That's what you said</h2>
            <!--<div id="listening"></div>-->
            <ul id="commands">
                <li>Say "listen" to start the speech recognition</li>
            </ul>

            <div class="more-info">
                <p>This Web Experience uses Speech Recognition.</p>
                <p><a href="#" id="open-web-speech-info-box">Learn more</a></p>
            </div>
        </div>
        <div id="not-chrome">
            <p>Your browser does not support speech recognition. Switch to <a href="https://www.google.de/chrome/browser/desktop/">Google Chrome</a> to enjoy the full experience of Project Ham!</p>
        </div>
    </div>

</main>

<footer>
    <div class="more-info">
        <p>This Web Experience uses Open Geo Data.</p>
        <p><a href="#" id="open-geo-info-box">Learn more</a></p>
    </div>
    <div>
        &copy; 2015, Project Ham | <a href="#" id="open-imprint">Imprint</a>
    </div>
</footer>

<script type="text/javascript">
    var eventBus = _.extend({}, Backbone.Events);
</script>

<!-- Benni -->
<script src="js/views/globeView.js"></script>
<script src="js/views/controlView.js"></script>

<!-- Flo -->
<script src="js/models/command.js"></script>
<script src="js/collections/commandList.js"></script>
<script src="js/views/commandView.js"></script>
<script src="js/models/filter.js"></script>
<script src="js/collections/filterList.js"></script>
<script src="js/views/filterView.js"></script>
<script src="js/views/prefilterView.js"></script>

<!-- Julian -->
<script src="js/models/tweet.js"></script>
<script src="js/models/connection.js"></script>
<script src="js/models/hashtag.js"></script>
<script src="js/models/user.js"></script>
<script src="js/collections/tweetList.js"></script>
<script src="js/collections/connectionList.js"></script>
<script src="js/collections/hashtagList.js"></script>
<script src="js/collections/userList.js"></script>
<script src="js/views/tweetView.js"></script>

<script src="js/views/appView.js"></script>
<script src="js/main.js"></script>

<!------------------ Custom Shader Code -------------------------->
<script id="vertexShader" type="x-shader/x-vertex">
uniform vec3 viewVector;
uniform float c;
uniform float p;
varying float intensity;
void main()
{
    vec3 vNormal = normalize( normalMatrix * normal );
	vec3 vNormel = normalize( normalMatrix * viewVector );
	intensity = pow( c - dot(vNormal, vNormel), p );

    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
</script>

<!-- fragment shader a.k.a. pixel shader -->
<script id="fragmentShader" type="x-shader/x-vertex">
uniform vec3 glowColor;
varying float intensity;
void main()
{
	vec3 glow = glowColor * intensity;
    gl_FragColor = vec4( glow, 0.5 );
}
</script>

</body>
</html>